name: Azure VM Deployment

on:
 workflow_dispatch:
   inputs:
     environment:
       description: 'Environment to deploy'
       required: true
       type: choice
       options:
         - dev
         - qa
         - prod
jobs:
  terraform:
    name: azure-vm-deployment
    runs-on: self-hosted
    defaults: 
     run: 
      working-directory: environments/${{ github.event.inputs.environment }}
    
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Install Azure CLI
        run: |
          curl -sL https://aka.ms/InstallAzureCLIDeb | sudo bash
          az version

      - name: Login to azure
        run: az login --use-device-code

      - name: Checking shell script for Backend
        run: ls *.sh

      - name: Making the script Executable
        run: |
          chmod +x *.sh
          sleep 10

      - name: Execute Shell Script
        run: ./*.sh
      
      - name: Install terraform
        run: |
          # 1. Update your package list 
          sudo apt-get update -y

          # 2. Install required dependencies
          sudo apt-get install -y gnupg software-properties-common curl

          # 3. Add the HashiCorp GPG key
          curl -fsSL https://apt.releases.hashicorp.com/gpg | sudo gpg --dearmor -o /usr/share/keyrings/hashicorp-archive-keyring.gpg

          # 4. Add the official HashiCorp APT repository
          echo "deb [signed-by=/usr/share/keyrings/hashicorp-archive-keyring.gpg] https://apt.releases.hashicorp.com $(lsb_release -cs) main" | sudo tee /etc/apt/sources.list.d/hashicorp.list

          # 5. Update the package list again
          sudo apt-get update -y

          # 6. Install Terraform
          sudo apt-get install -y terraform

          # 7. Verify the installation
          terraform -version


      - name: Configuring the Backend 
        run: |
          terraform init -backend-config="backend_config.tfvars"
          sleep 10
        
      - name: Validating the script
        run: | 
          terraform validate
          sleep 10
          
      - name: Planning the script 
        run: |
          terraform plan -var-file="${{ github.event.inputs.environment }}.tfvars"
          sleep 10

      - name: Applying the script
        run: |
          terraform apply -var-file="${{ github.event.inputs.environment }}.tfvars"
          sleep 60

      - name: Destroy Resources
        run: |
         terraform destroy -var-file="${{ github.event.inputs.environment }}.tfvars"
